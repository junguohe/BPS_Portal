<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

	<!-- The controllers are autodetected POJOs labeled with the @Controller 
		annotation. <context:component-scan base-package="com.erry,ch.ralscha.extdirectspring" 
		use-default-filters="false"> <context:include-filter expression="org.springframework.stereotype.Controller" 
		type="annotation"/> </context:component-scan> -->
	<!-- Turns on support for mapping requests to Spring MVC @Controller methods 
		Also registers default Formatters and Validators for use across all @Controllers 
		<mvc:annotation-driven/> -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources -->
	<mvc:resources location="/, classpath:/META-INF/web-resources/"
		mapping="/resources/**" />

	<!-- Allows for mapping the DispatcherServlet to "/" by forwarding static 
		resource requests to the container's default Servlet -->
	<mvc:default-servlet-handler />

	<!-- Register "global" interceptor beans to apply to all registered HandlerMappings -->
	<mvc:interceptors>
		<bean class="com.erry.common.TimeoutInterceptor"/>
		<bean class="org.springframework.web.servlet.theme.ThemeChangeInterceptor" />
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" p:paramName="lang" />
	</mvc:interceptors>

	<!-- Selects a static view for rendering without the need for an explicit 
		controller -->
	<mvc:view-controller path="/login" />
	<mvc:view-controller path="/" view-name="index" />
	<mvc:view-controller path="/uncaughtException" />
	<mvc:view-controller path="/resourceNotFound" />
	<mvc:view-controller path="/dataAccessFailure" />
	<mvc:view-controller path="/userNotExistException" />

	<!-- Store preferred language configuration in a cookie -->
	<bean class="org.springframework.web.servlet.i18n.CookieLocaleResolver"
		id="localeResolver" p:cookieName="locale" />

	<!-- Resolves localized <theme_name>.properties files in the classpath to 
		allow for theme support -->
	<bean
		class="org.springframework.ui.context.support.ResourceBundleThemeSource"
		id="themeSource" />

	<!-- Store preferred theme configuration in a cookie -->
	<bean class="org.springframework.web.servlet.theme.CookieThemeResolver"
		id="themeResolver" p:cookieName="theme" p:defaultThemeName="standard" />

	<!-- This bean resolves specific types of exceptions to corresponding logical 
		- view names for error views. The default behaviour of DispatcherServlet 
		- is to propagate all exceptions to the servlet container: this will happen 
		- here with all other types of exceptions. -->
	<bean class="com.erry.common.MyMappingException"
		p:defaultErrorView="uncaughtException">
		<property name="exceptionMappings">
			<props>
				<prop key=".DataAccessException">dataAccessFailure</prop>
				<prop key=".NoSuchRequestHandlingMethodException">resourceNotFound</prop>
				<prop key=".TypeMismatchException">resourceNotFound</prop>
				<prop key=".MissingServletRequestParameterException">resourceNotFound</prop>
				<prop key=".UserNotExistException">userNotExistException</prop>
			</props>
		</property>
	</bean>

	<!-- Enable this for integration of file upload functionality -->
	<bean
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		id="multipartResolver">
		<!-- 5M -->
		<property name="maxUploadSize" value="524288000" />
		<property name="maxInMemorySize" value="52428800" />
	</bean>

	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver"
		id="tilesViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles2.TilesView" />
	</bean>

	<bean class="org.springframework.web.servlet.view.tiles2.TilesConfigurer"
		id="tilesConfigurer">
		<property name="definitions">
			<list>
				<!-- Scan views directory for Tiles configurations <value>/WEB-INF/layouts/layouts.xml</value> 
					<value>/WEB-INF/views/**/views.xml</value> -->
				<value>/WEB-INF/manual_layouts/layouts.xml</value>
				<value>/WEB-INF/manual_views/**/views.xml</value>
			</list>
		</property>
	</bean>

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:viewClass="org.springframework.web.servlet.view.JstlView" p:prefix="/wechat/"
		p:suffix=".jsp" />

	<!-- 全局异常配置 start -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="com.erry.wechat.exception.WechatBusinessException">wechat/error</prop>
			</props>
		</property>
		<property name="statusCodes">
			<props>
				<prop key="wechat/error">500</prop>
				<prop key="wechat/error">404</prop>
				<prop key="wechat/error">405</prop>
			</props>
		</property>
		<!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
		<property name="warnLogCategory" value="WARN"></property>
		<!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->
		<property name="defaultErrorView" value="wechat/error"></property>
		<!-- 默认HTTP状态码 -->
		<property name="defaultStatusCode" value="500"></property>
		<property name="exceptionAttribute" value="ex"></property>  
	</bean>
	<!-- 全局异常配置 end -->
</beans>
